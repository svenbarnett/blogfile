{"title":"gulp-imagemin在压缩图片","slug":"gulp-imagemin-use","date":"2021-11-16T14:35:58.000Z","updated":"2022-12-19T13:35:29.284Z","comments":true,"path":"api/articles/gulp-imagemin-use.json","realpath":"/p/1009bbf4/","excerpt":null,"cover":"/p/1009bbf4/ppp","content":"<p>经过各种研（bai）究（du），找到了一种方案：采用 <code>gulp + gulp-imagemin</code> ，对图片进行压缩，结合 hexo 进行对应图片压缩。</p>\n<h3 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h3>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> gulp --save-dev</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> gulp-imagemin --save-dev</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> imagemin-pngquant --save-dev</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 当然也可以 --save  记得要给 gulp 全局安装下，npm 命令不行，就是用 cnpm</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> gulp <span class=\"token parameter variable\">-g</span> <span class=\"token comment\"># 只有 gulp 要全局安装下</span></pre></td></tr></table></figure><h3 id=\"gulpfile\"><a class=\"anchor\" href=\"#gulpfile\">#</a> gulpfile</h3>\n<p>在 package.json 同名目录下，增加 gulpfile.js 对应的入口 js 文件</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gulp <span class=\"token keyword\">from</span> <span class=\"token string\">'gulp'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> imagemin <span class=\"token keyword\">from</span> <span class=\"token string\">'gulp-imagemin'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> pngquant <span class=\"token keyword\">from</span> <span class=\"token string\">'imagemin-pngquant'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 定义一个任务 第一个参数为名称，后面时要执行的动作</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'minify-images'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">done</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    gulp<span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">'public/p/**/*.&#123;JPG,jpg,PNG,png,GIF,gif,SVG,svg,JPEG,jpeg&#125;'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">imagemin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\t<span class=\"token literal-property property\">optimizationLevel</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t<span class=\"token literal-property property\">progressive</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t<span class=\"token literal-property property\">usa</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token function\">pngquant</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'public/p/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">// 定义 default ，后面将多个任务序列化并行执行，我们只有一个</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'default'</span><span class=\"token punctuation\">,</span> gulp<span class=\"token punctuation\">.</span><span class=\"token function\">series</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">parallel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'minify-images'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------gulp Finished----------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>执行命令 <code>gulp</code>  默认情况下，代表 <code>gulp default</code>  就执行你上面的 default 任务</p>\n<p>当然你也可以制定任务名称： <code>gulp minify-images</code>  执行指定 task</p>\n<p>然后再 hexo 状态下：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo clean </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hexo g</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>gulp</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 输出如下：</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">22</span>:46:42<span class=\"token punctuation\">]</span> Using gulpfile ~/Desktop/blogfile/gulpfile.js</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">22</span>:46:42<span class=\"token punctuation\">]</span> Starting <span class=\"token string\">'default'</span><span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">22</span>:46:42<span class=\"token punctuation\">]</span> Starting <span class=\"token string\">'minify-images'</span><span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">22</span>:46:42<span class=\"token punctuation\">]</span> Finished <span class=\"token string\">'minify-images'</span> after <span class=\"token number\">74</span> ms</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">22</span>:46:42<span class=\"token punctuation\">]</span> Finished <span class=\"token string\">'default'</span> after <span class=\"token number\">99</span> ms</pre></td></tr></table></figure><p>那说明成功了</p>\n<h3 id=\"遇到的坑\"><a class=\"anchor\" href=\"#遇到的坑\">#</a> 遇到的坑</h3>\n<ul>\n<li>引入语法问题，插件需要使用 es6 语法，故此你的 package.json 需要增加一个参数 <code>  &quot;type&quot;: &quot;module&quot;</code>  如此你可以再 gulpfile.js 中使用 es6 的 import 语法</li>\n</ul>\n","raw":"经过各种研（bai）究（du），找到了一种方案：采用`gulp + gulp-imagemin`，对图片进行压缩，结合hexo进行对应图片压缩。\n\n### 安装\n\n```sh\nnpm install gulp --save-dev\nnpm install gulp-imagemin --save-dev\nnpm install imagemin-pngquant --save-dev\n# 当然也可以--save  记得要给gulp全局安装下，npm命令不行，就是用cnpm\nnpm install gulp -g # 只有gulp要全局安装下\n```\n\n### gulpfile\n\n在package.json同名目录下，增加gulpfile.js对应的入口js文件\n\n```javascript\nimport gulp from 'gulp';\nimport imagemin from 'gulp-imagemin';\nimport pngquant from 'imagemin-pngquant';\n\n// 定义一个任务 第一个参数为名称，后面时要执行的动作\ngulp.task('minify-images', function (done) {\n    gulp.src('public/p/**/*.{JPG,jpg,PNG,png,GIF,gif,SVG,svg,JPEG,jpeg}')\n\t\t.pipe(imagemin({\n\t\t\toptimizationLevel: 3,\n\t\t\tprogressive: true,\n\t\t\tusa:[pngquant()]\n\t\t}))\n\t\t.pipe(gulp.dest('public/p/'))\n    done();\n});\n// 定义default ，后面将多个任务序列化并行执行，我们只有一个\ngulp.task('default', gulp.series(gulp.parallel('minify-images')), function () {\n    console.info(\"----------gulp Finished----------\");\n});\n```\n\n执行命令`gulp` 默认情况下，代表`gulp default`就执行你上面的default任务\n\n当然你也可以制定任务名称：`gulp minify-images` 执行指定task\n\n然后再hexo状态下：\n\n```sh\nhexo clean \nhexo g\ngulp\n# 输出如下：\n[22:46:42] Using gulpfile ~/Desktop/blogfile/gulpfile.js\n[22:46:42] Starting 'default'...\n[22:46:42] Starting 'minify-images'...\n[22:46:42] Finished 'minify-images' after 74 ms\n[22:46:42] Finished 'default' after 99 ms\n```\n\n那说明成功了\n\n### 遇到的坑\n\n- 引入语法问题，插件需要使用es6语法，故此你的package.json 需要增加一个参数`  \"type\": \"module\"`如此你可以再gulpfile.js中使用es6的import语法\n","more":"<p>经过各种研（bai）究（du），找到了一种方案：采用 <code>gulp + gulp-imagemin</code> ，对图片进行压缩，结合 hexo 进行对应图片压缩。</p>\n<h3 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h3>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> gulp --save-dev</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> gulp-imagemin --save-dev</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> imagemin-pngquant --save-dev</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 当然也可以 --save  记得要给 gulp 全局安装下，npm 命令不行，就是用 cnpm</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> gulp <span class=\"token parameter variable\">-g</span> <span class=\"token comment\"># 只有 gulp 要全局安装下</span></pre></td></tr></table></figure><h3 id=\"gulpfile\"><a class=\"anchor\" href=\"#gulpfile\">#</a> gulpfile</h3>\n<p>在 package.json 同名目录下，增加 gulpfile.js 对应的入口 js 文件</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gulp <span class=\"token keyword\">from</span> <span class=\"token string\">'gulp'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> imagemin <span class=\"token keyword\">from</span> <span class=\"token string\">'gulp-imagemin'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> pngquant <span class=\"token keyword\">from</span> <span class=\"token string\">'imagemin-pngquant'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 定义一个任务 第一个参数为名称，后面时要执行的动作</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'minify-images'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">done</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    gulp<span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">'public/p/**/*.&#123;JPG,jpg,PNG,png,GIF,gif,SVG,svg,JPEG,jpeg&#125;'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">imagemin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\t<span class=\"token literal-property property\">optimizationLevel</span><span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t<span class=\"token literal-property property\">progressive</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t<span class=\"token literal-property property\">usa</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token function\">pngquant</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'public/p/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">// 定义 default ，后面将多个任务序列化并行执行，我们只有一个</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'default'</span><span class=\"token punctuation\">,</span> gulp<span class=\"token punctuation\">.</span><span class=\"token function\">series</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">parallel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'minify-images'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"----------gulp Finished----------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>执行命令 <code>gulp</code>  默认情况下，代表 <code>gulp default</code>  就执行你上面的 default 任务</p>\n<p>当然你也可以制定任务名称： <code>gulp minify-images</code>  执行指定 task</p>\n<p>然后再 hexo 状态下：</p>\n<figure class=\"highlight sh\"><figcaption data-lang=\"sh\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo clean </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hexo g</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>gulp</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 输出如下：</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">22</span>:46:42<span class=\"token punctuation\">]</span> Using gulpfile ~/Desktop/blogfile/gulpfile.js</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">22</span>:46:42<span class=\"token punctuation\">]</span> Starting <span class=\"token string\">'default'</span><span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">22</span>:46:42<span class=\"token punctuation\">]</span> Starting <span class=\"token string\">'minify-images'</span><span class=\"token punctuation\">..</span>.</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">22</span>:46:42<span class=\"token punctuation\">]</span> Finished <span class=\"token string\">'minify-images'</span> after <span class=\"token number\">74</span> ms</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">22</span>:46:42<span class=\"token punctuation\">]</span> Finished <span class=\"token string\">'default'</span> after <span class=\"token number\">99</span> ms</pre></td></tr></table></figure><p>那说明成功了</p>\n<h3 id=\"遇到的坑\"><a class=\"anchor\" href=\"#遇到的坑\">#</a> 遇到的坑</h3>\n<ul>\n<li>引入语法问题，插件需要使用 es6 语法，故此你的 package.json 需要增加一个参数 <code>  &quot;type&quot;: &quot;module&quot;</code>  如此你可以再 gulpfile.js 中使用 es6 的 import 语法</li>\n</ul>\n","categories":[],"tags":[{"name":"gulp","path":"api/tags/gulp.json"},{"name":"压缩图片","path":"api/tags/压缩图片.json"},{"name":"gulp-imagemin","path":"api/tags/gulp-imagemin.json"}]}
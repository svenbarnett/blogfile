{"name":"域名证书","postlist":[{"title":"linux生产免费的域名证书","slug":"acmesh-cert","date":"2021-12-29T13:59:07.000Z","updated":"2023-02-07T15:25:49.061Z","comments":null,"realpath":null,"path":"api/articles/acmesh-cert.json","excerpt":"简单来说acme.sh 实现了 acme 协议, 可以从 let‘s encrypt 生成免费的证书。<br>acme.sh 有以下特点：<br>一个纯粹用Shell（Unix shell）语言编写的ACME协议客户端。<br>完整的ACME协议实施。 支持ACME v1和ACME v2 支持ACME v2通配符证书<br>简单，功能强大且易于使用。你只需要3分钟就可以学习它。<br>Let’s Encrypt免费证书客户端最简单的shell脚本。<br>纯粹用Shell编写，不依赖于python或官方的Let’s Encrypt客户端。<br>只需一个脚本即可自动颁发，续订和安装证书。 不需要root&#x2F;sudoer访问权限。<br>支持在Docker内使用，支持IPv6","keywords":"linux,cert,acme.sh","cover":"/p/4425fc35/867078-20190326175923357-720763416.png","content":"<p>简单来说acme.sh 实现了 acme 协议, 可以从 let‘s encrypt 生成免费的证书。<br>acme.sh 有以下特点：<br>一个纯粹用Shell（Unix shell）语言编写的ACME协议客户端。<br>完整的ACME协议实施。 支持ACME v1和ACME v2 支持ACME v2通配符证书<br>简单，功能强大且易于使用。你只需要3分钟就可以学习它。<br>Let’s Encrypt免费证书客户端最简单的shell脚本。<br>纯粹用Shell编写，不依赖于python或官方的Let’s Encrypt客户端。<br>只需一个脚本即可自动颁发，续订和安装证书。 不需要root&#x2F;sudoer访问权限。<br>支持在Docker内使用，支持IPv6</p>\n<span id=\"more\"></span>\n\n<p><strong>安装环境：</strong><br><strong>操作系统：centos 7 X64</strong><br><strong>SSL证书来源：Let’s Encrypt</strong><br><strong>安装用脚本：acme.sh</strong><br><strong>服务器：nginx</strong><br><strong>域名：epoint.pswen.cn</strong></p>\n<p>1.安装acme.sh</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https://get.acme.sh | sh</span><br></pre></td></tr></table></figure>\n\n<p>2.安装后的配置<br>把 acme.sh 安装到你的 home 目录下:~&#x2F;.acme.sh&#x2F;并创建 一个 bash 的 alias, 方便你的使用:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alias acme.sh=~/.acme.sh/acme.sh</span><br><span class=\"line\">echo &#x27;alias acme.sh=~/.acme.sh/acme.sh&#x27; &gt;&gt;/etc/profile</span><br></pre></td></tr></table></figure>\n\n<p>3.申请证书<br>acme.sh 实现了 acme 协议支持的所有验证协议. 一般有两种方式验证: http 和 dns 验证（本文不提供dns方式申请，dns手动模式，不能自动更新证书。在续订证书时，您必须手动向域中添加新的txt记录。）</p>\n<p>HTTP 方式方法如下：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">acme.sh --issue -d epoint.pswen.cn --webroot /nginx网站根目录</span><br></pre></td></tr></table></figure>\n\n<p>只需要指定域名, 并指定域名所在的网站根目录【命令中根目录路径】. acme.sh 会全自动的生成验证文件, 并放到网站的根目录, 然后自动完成验证. 最后会聪明的删除验证文件. 整个过程没有任何副作用.</p>\n<p>4.证书的安装<br>注意, 默认生成的证书都放在安装目录下: ~&#x2F;.acme.sh&#x2F;, 请不要直接使用此目录下的文件,<br>例如: 不要直接让 nginx&#x2F;apache 的配置文件使用这下面的文件.<br>这里面的文件都是内部使用, 而且目录结构可能会变化.</p>\n<p>正确的使用方法是使用 –installcert 命令,并指定目标位置, 然后证书文件会被copy到相应的位置,</p>\n<p>Nginx服务：<code>service nginx force-reload</code>。(centos6)</p>\n<p>Nginx服务：<code>systemctl restart nginx </code>。(centos7)</p>\n<p>nginx示例1:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">acme.sh --installcert -d epoint.pswen.cn --key-file /usr/local/nginx/ssl_cert/epoint.pswen.cn.key --fullchain-file /usr/local/nginx/ssl_cert/epoint.pswen.cn.cer --reloadcmd &quot;service nginx force-reload&quot;</span><br></pre></td></tr></table></figure>\n\n<p>nginx示例2：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">acme.sh --install-cert -d chandao.test.com \\</span><br><span class=\"line\">--key-file /usr/local/nginx/ssl_cert/test.com/chandao.test.com.key \\</span><br><span class=\"line\">--fullchain-file /usr/local/nginx/ssl_cert/test.com/chandao.test.com.cer \\</span><br><span class=\"line\">--reloadcmd      <span class=\"string\">&quot;service nginx force-reload&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>附带完成前面1-4步骤的截图：</p>\n<p><img src=\"/p/4425fc35/867078-20190326175923357-720763416.png\" alt=\"img\"></p>\n<ol start=\"5\">\n<li>Nginx服务器安装SSL证书</li>\n</ol>\n<p>Nginx 配置Http和Https共存</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">listen 80; #如果硬性要求全部走https协议，这一行去除</span><br><span class=\"line\">listen 443 ssl http2; #如果硬性要求全部走https协议，这里去除ssl</span><br><span class=\"line\">server_name chandao.test.com;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">ssl on; <span class=\"comment\">#如果硬性要求全部走https协议，这里开启ssl on</span></span></span><br><span class=\"line\">ssl_certificate /usr/local/nginx/ssl_cert/test.com/chandao.test.com.cer;</span><br><span class=\"line\">ssl_certificate_key /usr/local/nginx/ssl_cert/test.com/chandao.test.com.key;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">ssl性能调优</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">nginx 1.13.0支持了TLSv1.3,TLSv1.3相比之前的TLSv1.2、TLSv1.1等性能大幅提升</span></span><br><span class=\"line\">ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class=\"line\">ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;</span><br><span class=\"line\">ssl_prefer_server_ciphers on;</span><br><span class=\"line\">ssl_session_timeout 10m;</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">使用ssl_session_cache优化https下Nginx的性能</span></span><br><span class=\"line\">ssl_session_cache builtin:1000 shared:SSL:10m;</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">OCSP Stapling 开启。OCSP是用于在线查询证书吊销情况的服务，使用OCSP Stapling能将证书有效状态的信息缓存到服务器，提高 TLS 握手速度</span></span><br><span class=\"line\">ssl_stapling on;</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">OCSP Stapling 验证开启</span></span><br><span class=\"line\">ssl_stapling_verify on; </span><br></pre></td></tr></table></figure>\n\n<p>完整例子：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">  listen 80;  #如果硬性要求全部走https协议，这一行去除</span><br><span class=\"line\">  listen       443 ssl http2;    #如果硬性要求全部走https协议，这里去除ssl</span><br><span class=\"line\">  server_name chandao.test.com;</span><br><span class=\"line\">  access_log off;</span><br><span class=\"line\">  index index.html index.htm index.php;</span><br><span class=\"line\">  root /data/wwwroot/chandao;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">  #</span><span class=\"language-bash\">ssl on;   <span class=\"comment\">#如果硬性要求全部走https协议，这里开启ssl on</span></span></span><br><span class=\"line\">  ssl_certificate   /usr/local/nginx/ssl_cert/test.com/chandao.test.com.cer;</span><br><span class=\"line\">  ssl_certificate_key  /usr/local/nginx/ssl_cert/test.com/chandao.test.com.key;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">  #</span><span class=\"language-bash\">ssl性能调优</span></span><br><span class=\"line\"><span class=\"meta prompt_\">  #</span><span class=\"language-bash\">nginx 1.13.0支持了TLSv1.3,TLSv1.3相比之前的TLSv1.2、TLSv1.1等性能大幅提升</span></span><br><span class=\"line\">  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class=\"line\">  ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;</span><br><span class=\"line\">  ssl_prefer_server_ciphers on;</span><br><span class=\"line\">  ssl_session_timeout 10m;</span><br><span class=\"line\"><span class=\"meta prompt_\">  #</span><span class=\"language-bash\">使用ssl_session_cache优化https下Nginx的性能</span></span><br><span class=\"line\">  ssl_session_cache builtin:1000 shared:SSL:10m;</span><br><span class=\"line\"><span class=\"meta prompt_\">  #</span><span class=\"language-bash\">OCSP Stapling 开启。OCSP是用于在线查询证书吊销情况的服务，使用OCSP Stapling能将证书有效状态的信息缓存到服务器，提高 TLS 握手速度</span></span><br><span class=\"line\">  ssl_stapling on;</span><br><span class=\"line\"><span class=\"meta prompt_\">  #</span><span class=\"language-bash\">OCSP Stapling 验证开启</span></span><br><span class=\"line\">  ssl_stapling_verify on; </span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">  #</span><span class=\"language-bash\">error_page 404 /404.html;</span></span><br><span class=\"line\"><span class=\"meta prompt_\">  #</span><span class=\"language-bash\">error_page 502 /502.html;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  location ~ [^/]\\.php(/|$) &#123;</span><br><span class=\"line\">    #fastcgi_pass remote_php_ip:9000;</span><br><span class=\"line\">    fastcgi_pass unix:/dev/shm/php-cgi.sock;</span><br><span class=\"line\">    fastcgi_index index.php;</span><br><span class=\"line\">    include fastcgi.conf;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf|flv|mp4|ico)$ &#123;</span><br><span class=\"line\">    expires 30d;</span><br><span class=\"line\">    access_log off;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  location ~ .*\\.(js|css)?$ &#123;</span><br><span class=\"line\">    expires 7d;</span><br><span class=\"line\">    access_log off;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  location ~ /\\.ht &#123;</span><br><span class=\"line\">    deny all;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>6.重启nginx<br>保存退出后，通过nginx -t来检查配置文件是否正确，有错误的话改之即可。配置文件检测正确之后，通过service nginx force-reload来重载配置文件。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -t</span><br><span class=\"line\">systemctl restart nginx</span><br></pre></td></tr></table></figure>\n","raw":null,"categories":[],"tags":[{"name":"linux","path":"api/tags/linux.json"},{"name":"acmesh","path":"api/tags/acmesh.json"},{"name":"域名证书","path":"api/tags/域名证书.json"}]}]}
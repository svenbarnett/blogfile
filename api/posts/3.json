{"total":30,"pageSize":10,"pageCount":3,"data":[{"title":"寻找重复数——LeetCode287","slug":"find-the-duplicate-number","date":"2021-11-11T13:02:11.000Z","updated":"2023-02-14T13:10:17.167Z","comments":null,"realpath":null,"path":"api/articles/find-the-duplicate-number.json","excerpt":"给定一个包含 n + 1 个整数的数组 nums ，其数字都在 1 到 n 之间（包括 1 和 n），可知至少存在一个重复的整数。<br>假设 nums 只有 一个重复的整数 ，找出 这个重复的数 。<br>你设计的解决方案必须不修改数组 nums 且只用常量级 O (1) 的额外空间。<br>Leetcode-287 链接：https://leetcode-cn.com/problems/find-the-duplicate-number","keywords":"寻找重复数,二分法,算法,leetcode","cover":"","content":"<p>给定一个包含 n + 1 个整数的数组 nums ，其数字都在 1 到 n 之间（包括 1 和 n），可知至少存在一个重复的整数。<br>\n假设 nums 只有 一个重复的整数 ，找出 这个重复的数 。<br>\n你设计的解决方案必须不修改数组 nums 且只用常量级 O (1) 的额外空间。<br>\nLeetcode-287 链接：<a href=\"https://leetcode-cn.com/problems/find-the-duplicate-number\">https://leetcode-cn.com/problems/find-the-duplicate-number</a></p>\n<span id=\"more\"></span>\n<p>示例 1：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：nums = [1,3,4,2,2]</span><br><span class=\"line\">输出：2</span><br></pre></td></tr></table></figure>\n<p>示例 2：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：nums = [3,1,3,4,2]</span><br><span class=\"line\">输出：3</span><br></pre></td></tr></table></figure>\n<p>示例 3：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：nums = [1,1]</span><br><span class=\"line\">输出：1</span><br></pre></td></tr></table></figure>\n<p>示例 4：</p>\n<figure class=\"highlight fix\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">输入：nums </span>=<span class=\"string\"> [1,1,2]</span></span><br><span class=\"line\"><span class=\"string\">输出：1</span></span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 &lt;= n &lt;= 105</span><br><span class=\"line\">nums.length == n + 1</span><br><span class=\"line\">1 &lt;= nums[i] &lt;= n</span><br></pre></td></tr></table></figure>\n<p>nums 中 只有一个整数 出现 两次或多次 ，其余整数均只出现 一次</p>\n<h3 id=\"解题\"><a class=\"markdownIt-Anchor\" href=\"#解题\">#</a> 解题</h3>\n<ol>\n<li>二分法</li>\n</ol>\n<p>针对用例 <code>[1,3,4,2,2]</code></p>\n<p>定义一个 <code>cnt</code>  数组用来存储小于等于 索引  <code>i</code>  的总数</p>\n<p>如果知道 cnt 数组随数字 index 逐渐增大具有单调性，那么当 num [index] 那么我们就可以直接利用二分查找来找到重复的数</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">nums</th>\n<th style=\"text-align:center\">1</th>\n<th style=\"text-align:center\">2</th>\n<th style=\"text-align:center\">3</th>\n<th style=\"text-align:center\">4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">cnt</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">5</td>\n</tr>\n</tbody>\n</table>\n<p>小于等于 1 的一个</p>\n<p>小于等于 2 的三个</p>\n<p>小于等于 3 的四个</p>\n<p>小于等于 4 的五个</p>\n<p>由此可见：我们的目标是 2，target 满足: target 前面的  <code>cnt[i] &lt;=  i</code> , 目标值 target 之后的  <code>cnt[i] &gt; i</code></p>\n<p>实际上可以归纳为：</p>\n<ul>\n<li>\n<p>如果测试用例的数组中  <code>target</code>  出现了两次，其余的数各出现了一次，这个时候肯定满足上文提及的性质，因为小于  <code>target</code>  的数 i 满足  <code>cnt[i]=i</code> ，大于等于  <code>target</code>  的数  <code>j</code>  满足  <code>cnt[j]=j+1</code> 。</p>\n</li>\n<li>\n<p>如果测试用例的数组中 <code>target </code> 出现了三次及以上，那么必然有一些数不在  <code>nums</code>  数组中了，这个时候相当于我们用 <code>target</code>  去替换了这些数，我们考虑替换的时候对 <code>cnt[] </code> 数组的影响。如果替换的数 <code>i</code>  小于  <code>target</code>  ，那么在数 <code>i</code>  到 <code>target</code>  区间的值，均减一，其他不变，满足条件。如果替换的数  <code>j</code>  大于等于  <code>target</code> ，那么 <code>target</code>  到 数 <code>j</code>  区间内值均加一，其他不变，亦满足条件。</p>\n</li>\n</ul>\n<p>因此不管多个重复还是两个重复，数组都满足那个性质。</p>\n<p>代码实现：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">findDuplicate</span><span class=\"params\">(<span class=\"type\">int</span>[] nums)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">n</span> <span class=\"operator\">=</span> nums.length;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">l</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>, r = n - <span class=\"number\">1</span>, ans = -<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (l &lt;= r) &#123;</span><br><span class=\"line\">           # 右移动一位，相关于除以<span class=\"number\">2</span>，取中间值</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">mid</span> <span class=\"operator\">=</span> (l + r) &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">cnt</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; n; ++i) &#123;</span><br><span class=\"line\">              # 将小于等于中间值都加起来  </span><br><span class=\"line\">              <span class=\"keyword\">if</span> (nums[i] &lt;= mid) &#123;</span><br><span class=\"line\">                    cnt++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">           # 如果此时的cnt总数小于等于mid，那说明不在mid左边</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (cnt &lt;= mid) &#123;</span><br><span class=\"line\">               # 把左边拉到中间</span><br><span class=\"line\">                l = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                # 否则把右边拉到中间</span><br><span class=\"line\">                r = mid - <span class=\"number\">1</span>;</span><br><span class=\"line\">                # 记录答案</span><br><span class=\"line\">                ans = mid;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<p>时间复杂度： <code>O(n * logn)</code> ，其中 n 为 nums 数组的长度。二分查找最多需要二分 <code>O(logn) </code> 次，每次判断的时候需要 <code>O(n)</code>  遍历 nums 数组求解小于等于 mid 的数的个数，因此总时间复杂度为 <code>O(n * logn)</code> 。</p>\n<p>空间复杂度： <code>O(1)</code> 。我们只需要常数空间存放若干变量。</p>\n<ol start=\"2\">\n<li>快慢指针</li>\n</ol>\n<p>我们对 nums 数组建图，每个位置  <code>i</code>  连一条  <code>i→nums[i]</code>  的边。由于存在的重复的数字<br>\n <code>target</code>  因此  <code>target </code> 这个位置一定有起码两条指向它的边，因此整张图一定存在环，且我们要找到的<br>\n <code>target</code>  就是这个环的入口.</p>\n<p>我们先设置慢指针 <code>slow 和快指针</code>   <code>fast</code>  ，慢指针每次走一步，快指针每次走两步，根据「Floyd 判圈算法」两个指针在有环的情况下一定会相遇，此时我们再将  <code>slow</code>  放置起点 <code>0</code> ，两个指针每次同时移动一步，相遇的点就是答案。</p>\n<p>代码实现：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">findDuplicate</span><span class=\"params\">(<span class=\"type\">int</span>[] nums)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">slow</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>, fast = <span class=\"number\">0</span>;</span><br><span class=\"line\">      \t# 找环的入口</span><br><span class=\"line\">        <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">            slow = nums[slow];</span><br><span class=\"line\">            fast = nums[nums[fast]];</span><br><span class=\"line\">        &#125; <span class=\"keyword\">while</span> (slow != fast);</span><br><span class=\"line\">        # 重置slow为起点</span><br><span class=\"line\">        slow = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (slow != fast) &#123;</span><br><span class=\"line\">            slow = nums[slow];</span><br><span class=\"line\">            fast = nums[fast];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        # 再次相遇 就是环入口</span><br><span class=\"line\">        <span class=\"keyword\">return</span> slow;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>复杂度分析</p>\n<p>时间复杂度： <code>O(n)</code> 。「Floyd 判圈算法」时间复杂度为线性的时间复杂度。<br>\n空间复杂度： <code>O(1)</code> 。我们只需要常数空间存放若干变量。</p>\n","raw":null,"categories":[],"tags":[{"name":"leetcode","path":"api/tags/leetcode.json"},{"name":"算法","path":"api/tags/算法.json"},{"name":"二分法","path":"api/tags/二分法.json"},{"name":"快慢指针","path":"api/tags/快慢指针.json"}]},{"title":"图记——晚霞的尾巴","slug":"pic-shenzhen-1","date":"2021-08-27T10:50:09.000Z","updated":"2023-02-14T13:10:17.223Z","comments":null,"realpath":null,"path":"api/articles/pic-shenzhen-1.json","excerpt":null,"keywords":"晚霞,天安云谷","cover":"/p/4ee64d66/IMG_0027.jpg","content":"<p><img src=\"/p/4ee64d66/IMG_0027.jpg\" alt=\"晚霞的尾巴\"></p>\n","raw":null,"categories":[],"tags":[{"name":"晚霞","path":"api/tags/晚霞.json"},{"name":"云谷","path":"api/tags/云谷.json"}]},{"title":"图记——武康大楼","slug":"pic-shanghai-1","date":"2021-05-16T05:50:28.000Z","updated":"2023-02-14T13:10:17.187Z","comments":null,"realpath":null,"path":"api/articles/pic-shanghai-1.json","excerpt":null,"keywords":"武康大楼,上海,图记","cover":"/p/9b051724/IMG_4609.jpg","content":"<p><img src=\"/p/9b051724/IMG_4609.jpg\" alt=\"武康大楼\"></p>\n","raw":null,"categories":[],"tags":[{"name":"武康大楼","path":"api/tags/武康大楼.json"},{"name":"上海","path":"api/tags/上海.json"}]},{"title":"往昔时光-我们","slug":"olden-days-4","date":"2021-02-12T05:43:18.000Z","updated":"2023-02-14T13:10:17.183Z","comments":null,"realpath":null,"path":"api/articles/olden-days-4.json","excerpt":null,"keywords":"往昔时光,我们,传承","cover":"/p/51719/IMG_4766.JPG","content":"<p><img src=\"/p/51719/IMG_4766.JPG\" alt=\"今夕\"></p>\n<p>小时候我们唯一的合照</p>\n","raw":null,"categories":[],"tags":[{"name":"我们","path":"api/tags/我们.json"},{"name":"年轻","path":"api/tags/年轻.json"},{"name":"年幼","path":"api/tags/年幼.json"}]},{"title":"图记——上海外滩","slug":"pic-shanghai-4","date":"2020-05-20T13:35:39.000Z","updated":"2023-02-14T13:10:17.215Z","comments":null,"realpath":null,"path":"api/articles/pic-shanghai-4.json","excerpt":null,"keywords":"上海外滩,夜景","cover":"/p/ec5868f5/IMG_4615.JPG","content":"<p><img src=\"/p/ec5868f5/IMG_4615.JPG\" alt=\"朦胧的外滩\"></p>\n","raw":null,"categories":[],"tags":[{"name":"上海外滩","path":"api/tags/上海外滩.json"},{"name":"夜景","path":"api/tags/夜景.json"}]},{"title":"图记——直插云霄","slug":"pic-shanghai-3","date":"2019-12-30T11:50:56.000Z","updated":"2023-02-14T13:10:17.211Z","comments":null,"realpath":null,"path":"api/articles/pic-shanghai-3.json","excerpt":null,"keywords":"上海,图记,上海中心大厦","cover":"/p/6617d304/IMG_4526.JPG","content":"<p><img src=\"/p/6617d304/IMG_4526.JPG\" alt=\"直插云霄\"></p>\n","raw":null,"categories":[],"tags":[{"name":"上海","path":"api/tags/上海.json"},{"name":"三叉戟","path":"api/tags/三叉戟.json"}]},{"title":"图记——大厦","slug":"pic-shanghai-2","date":"2019-10-08T10:50:44.000Z","updated":"2023-02-14T13:10:17.207Z","comments":null,"realpath":null,"path":"api/articles/pic-shanghai-2.json","excerpt":null,"keywords":"图记,上海,陆家嘴","cover":"/p/dfa3267e/IMG_4474.JPG","content":"<p><img src=\"/p/dfa3267e/IMG_4474.JPG\" alt=\"大厦\"></p>\n","raw":null,"categories":[],"tags":[{"name":"上海","path":"api/tags/上海.json"},{"name":"陆家嘴","path":"api/tags/陆家嘴.json"}]},{"title":"往昔时光-大学","slug":"olden-days-1","date":"2018-06-23T05:32:35.000Z","updated":"2023-02-14T13:10:17.175Z","comments":null,"realpath":null,"path":"api/articles/olden-days-1.json","excerpt":null,"keywords":"往昔时光,大学","cover":"/p/4166/IMG_3952.JPG","content":"<p><img src=\"/p/4166/IMG_3952.JPG\" alt=\"学位授予\"></p>\n<p>梦想的起点</p>\n","raw":null,"categories":[],"tags":[{"name":"往昔时光","path":"api/tags/往昔时光.json"},{"name":"大学","path":"api/tags/大学.json"}]},{"title":"往昔时光-可爱的他们","slug":"olden-days-2","date":"2018-02-13T04:36:02.000Z","updated":"2023-02-14T13:10:17.175Z","comments":null,"realpath":null,"path":"api/articles/olden-days-2.json","excerpt":null,"keywords":"往昔时光,高中,可爱的他们","cover":"/p/43666/IMG_3586.JPG","content":"<p><img src=\"/p/43666/IMG_3586.JPG\" alt=\"可爱的他们\"></p>\n<p>可爱的他们</p>\n","raw":null,"categories":[],"tags":[{"name":"往昔时光","path":"api/tags/往昔时光.json"},{"name":"高中","path":"api/tags/高中.json"}]},{"title":"往昔时光-大学实习","slug":"olden-days-3","date":"2017-06-17T02:39:52.000Z","updated":"2023-02-14T13:10:17.175Z","comments":null,"realpath":null,"path":"api/articles/olden-days-3.json","excerpt":null,"keywords":"往昔时光,大学,实习","cover":"/p/48940/IMG_2498.JPG","content":"<p><img src=\"/p/48940/IMG_2498.JPG\" alt=\"实习\"></p>\n<p>参观实习</p>\n<p><img src=\"/p/48940/IMG_2473.JPG\" alt=\"流体机械\"></p>\n","raw":null,"categories":[],"tags":[{"name":"大学","path":"api/tags/大学.json"},{"name":"往昔","path":"api/tags/往昔.json"},{"name":"实习","path":"api/tags/实习.json"}]}]}
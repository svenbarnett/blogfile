<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>人间日常 • Posts by &#34;二分法&#34; tag</title>
        <link>https://www.pswen.cn</link>
        <description>所行皆过往，所愿皆成真</description>
        <language>zh-CN</language>
        <pubDate>Thu, 11 Nov 2021 13:02:11 +0000</pubDate>
        <lastBuildDate>Thu, 11 Nov 2021 13:02:11 +0000</lastBuildDate>
        <category>疫情</category>
        <category>春节</category>
        <category>烟花</category>
        <category>元宵节</category>
        <category>QQ</category>
        <category>那些年</category>
        <category>linux</category>
        <category>acmesh</category>
        <category>域名证书</category>
        <category>leetcode</category>
        <category>算法</category>
        <category>贪心</category>
        <category>动态规划</category>
        <category>二分法</category>
        <category>快慢指针</category>
        <category>gulp</category>
        <category>压缩图片</category>
        <category>gulp-imagemin</category>
        <category>正则</category>
        <category>js</category>
        <category>去除零</category>
        <category>Java</category>
        <category>位运算</category>
        <category>jvm</category>
        <category>类加载</category>
        <category>jvm调优</category>
        <category>混合模式</category>
        <category>解释模式</category>
        <category>纯编译模式</category>
        <category>环形链表</category>
        <category>往昔时光</category>
        <category>大学</category>
        <category>高中</category>
        <category>往昔</category>
        <category>实习</category>
        <category>我们</category>
        <category>年轻</category>
        <category>年幼</category>
        <category>树</category>
        <category>dfs</category>
        <category>bfs</category>
        <category>武康大楼</category>
        <category>上海</category>
        <category>陆家嘴</category>
        <category>三叉戟</category>
        <category>上海外滩</category>
        <category>夜景</category>
        <category>晚霞</category>
        <category>云谷</category>
        <category>回溯</category>
        <category>矩阵</category>
        <category>深度遍历</category>
        <category>广度遍历</category>
        <category>图记</category>
        <category>天安云谷</category>
        <category>生活</category>
        <category>午餐</category>
        <category>单词接龙</category>
        <item>
            <guid isPermalink="true">https://www.pswen.cn/p/44752/</guid>
            <title>寻找重复数——LeetCode287</title>
            <link>https://www.pswen.cn/p/44752/</link>
            <category>leetcode</category>
            <category>算法</category>
            <category>二分法</category>
            <category>快慢指针</category>
            <pubDate>Thu, 11 Nov 2021 13:02:11 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;给定一个包含 n + 1 个整数的数组 nums ，其数字都在 1 到 n 之间（包括 1 和 n），可知至少存在一个重复的整数。&lt;br&gt;
假设 nums 只有 一个重复的整数 ，找出 这个重复的数 。&lt;br&gt;
你设计的解决方案必须不修改数组 nums 且只用常量级 O (1) 的额外空间。&lt;br&gt;
Leetcode-287 链接：&lt;a href=&#34;https://leetcode-cn.com/problems/find-the-duplicate-number&#34;&gt;https://leetcode-cn.com/problems/find-the-duplicate-number&lt;/a&gt;&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;p&gt;示例 1：&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;输入：nums = [1,3,4,2,2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;输出：2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;示例 2：&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;输入：nums = [3,1,3,4,2]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;输出：3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;示例 3：&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;输入：nums = [1,1]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;输出：1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;示例 4：&lt;/p&gt;
&lt;figure class=&#34;highlight fix&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;输入：nums &lt;/span&gt;=&lt;span class=&#34;string&#34;&gt; [1,1,2]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;输出：1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;提示：&lt;/p&gt;
&lt;figure class=&#34;highlight sh&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1 &amp;lt;= n &amp;lt;= 105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nums.length == n + 1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;1 &amp;lt;= nums[i] &amp;lt;= n&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;nums 中 只有一个整数 出现 两次或多次 ，其余整数均只出现 一次&lt;/p&gt;
&lt;h3 id=&#34;解题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解题&#34;&gt;#&lt;/a&gt; 解题&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;二分法&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;针对用例 &lt;code&gt;[1,3,4,2,2]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;定义一个 &lt;code&gt;cnt&lt;/code&gt;  数组用来存储小于等于 索引  &lt;code&gt;i&lt;/code&gt;  的总数&lt;/p&gt;
&lt;p&gt;如果知道 cnt 数组随数字 index 逐渐增大具有单调性，那么当 num [index] 那么我们就可以直接利用二分查找来找到重复的数&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;nums&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;1&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;2&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;3&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;4&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;cnt&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;小于等于 1 的一个&lt;/p&gt;
&lt;p&gt;小于等于 2 的三个&lt;/p&gt;
&lt;p&gt;小于等于 3 的四个&lt;/p&gt;
&lt;p&gt;小于等于 4 的五个&lt;/p&gt;
&lt;p&gt;由此可见：我们的目标是 2，target 满足: target 前面的  &lt;code&gt;cnt[i] &amp;lt;=  i&lt;/code&gt; , 目标值 target 之后的  &lt;code&gt;cnt[i] &amp;gt; i&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;实际上可以归纳为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;如果测试用例的数组中  &lt;code&gt;target&lt;/code&gt;  出现了两次，其余的数各出现了一次，这个时候肯定满足上文提及的性质，因为小于  &lt;code&gt;target&lt;/code&gt;  的数 i 满足  &lt;code&gt;cnt[i]=i&lt;/code&gt; ，大于等于  &lt;code&gt;target&lt;/code&gt;  的数  &lt;code&gt;j&lt;/code&gt;  满足  &lt;code&gt;cnt[j]=j+1&lt;/code&gt; 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果测试用例的数组中 &lt;code&gt;target &lt;/code&gt; 出现了三次及以上，那么必然有一些数不在  &lt;code&gt;nums&lt;/code&gt;  数组中了，这个时候相当于我们用 &lt;code&gt;target&lt;/code&gt;  去替换了这些数，我们考虑替换的时候对 &lt;code&gt;cnt[] &lt;/code&gt; 数组的影响。如果替换的数 &lt;code&gt;i&lt;/code&gt;  小于  &lt;code&gt;target&lt;/code&gt;  ，那么在数 &lt;code&gt;i&lt;/code&gt;  到 &lt;code&gt;target&lt;/code&gt;  区间的值，均减一，其他不变，满足条件。如果替换的数  &lt;code&gt;j&lt;/code&gt;  大于等于  &lt;code&gt;target&lt;/code&gt; ，那么 &lt;code&gt;target&lt;/code&gt;  到 数 &lt;code&gt;j&lt;/code&gt;  区间内值均加一，其他不变，亦满足条件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此不管多个重复还是两个重复，数组都满足那个性质。&lt;/p&gt;
&lt;p&gt;代码实现：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Solution&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;findDuplicate&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;[] nums)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; nums.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;l&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, r = n - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, ans = -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (l &amp;lt;= r) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           # 右移动一位，相关于除以&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;，取中间值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; (l + r) &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;cnt&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; n; ++i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              # 将小于等于中间值都加起来  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (nums[i] &amp;lt;= mid) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    cnt++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           # 如果此时的cnt总数小于等于mid，那说明不在mid左边&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (cnt &amp;lt;= mid) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               # 把左边拉到中间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                l = mid + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                # 否则把右边拉到中间&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                r = mid - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                # 记录答案&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ans = mid;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;复杂度分析&lt;/p&gt;
&lt;p&gt;时间复杂度： &lt;code&gt;O(n * logn)&lt;/code&gt; ，其中 n 为 nums 数组的长度。二分查找最多需要二分 &lt;code&gt;O(logn) &lt;/code&gt; 次，每次判断的时候需要 &lt;code&gt;O(n)&lt;/code&gt;  遍历 nums 数组求解小于等于 mid 的数的个数，因此总时间复杂度为 &lt;code&gt;O(n * logn)&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;空间复杂度： &lt;code&gt;O(1)&lt;/code&gt; 。我们只需要常数空间存放若干变量。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;快慢指针&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我们对 nums 数组建图，每个位置  &lt;code&gt;i&lt;/code&gt;  连一条  &lt;code&gt;i→nums[i]&lt;/code&gt;  的边。由于存在的重复的数字&lt;br&gt;
 &lt;code&gt;target&lt;/code&gt;  因此  &lt;code&gt;target &lt;/code&gt; 这个位置一定有起码两条指向它的边，因此整张图一定存在环，且我们要找到的&lt;br&gt;
 &lt;code&gt;target&lt;/code&gt;  就是这个环的入口.&lt;/p&gt;
&lt;p&gt;我们先设置慢指针 &lt;code&gt;slow 和快指针&lt;/code&gt;   &lt;code&gt;fast&lt;/code&gt;  ，慢指针每次走一步，快指针每次走两步，根据「Floyd 判圈算法」两个指针在有环的情况下一定会相遇，此时我们再将  &lt;code&gt;slow&lt;/code&gt;  放置起点 &lt;code&gt;0&lt;/code&gt; ，两个指针每次同时移动一步，相遇的点就是答案。&lt;/p&gt;
&lt;p&gt;代码实现：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Solution&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;findDuplicate&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;int&lt;/span&gt;[] nums)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;type&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;slow&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, fast = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      	# 找环的入口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            slow = nums[slow];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            fast = nums[nums[fast]];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (slow != fast);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        # 重置slow为起点&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        slow = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (slow != fast) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            slow = nums[slow];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            fast = nums[fast];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        # 再次相遇 就是环入口&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; slow;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;复杂度分析&lt;/p&gt;
&lt;p&gt;时间复杂度： &lt;code&gt;O(n)&lt;/code&gt; 。「Floyd 判圈算法」时间复杂度为线性的时间复杂度。&lt;br&gt;
空间复杂度： &lt;code&gt;O(1)&lt;/code&gt; 。我们只需要常数空间存放若干变量。&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
